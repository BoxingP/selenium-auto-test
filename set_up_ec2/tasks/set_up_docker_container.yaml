---
- name: build docker image
  community.docker.docker_image:
    name: '{{ docker.image_name }}_{{ item.name }}'
    tag: '{{ docker.image_tag }}'
    build:
      path: '{{ item.path }}'
    source: build
    state: present
    force_source: yes
    force_tag: yes

- name: set container name
  set_fact:
    container_name: '{{ docker.image_name }}_{{ item.name }}_{{ docker.image_tag }}'

- name: check for containers that actually exist
  shell: 'docker ps -aq --filter "name={{ container_name }}"'
  register: found_containers

- name: remove the containers found
  shell: 'docker stop {{ found_containers.stdout }} && docker rm -f {{ found_containers.stdout }}'
  when: found_containers.stdout

- name: start docker container
  command: 'docker run --name={{ container_name }} --detach --mount type=bind,src={{ allure_report_path }},dst={{ item.container_mount }} {{ item.additional_options }}--restart=always {{ docker.image_name }}_{{ item.name }}:{{ docker.image_tag }}'