---
- name: install pytest
  pip:
    name:
      - allure-pytest==2.9.45
      - pytest==6.2.5
      - pytest-rerunfailures==10.2
      - pytest-xdist==2.5.0
    virtualenv: /tmp/pytest/python
    virtualenv_command: /usr/bin/python3 -m venv
  become: yes

- name: install selenium
  pip:
    name:
      - selenium==3.141.0
    virtualenv: /tmp/selenium/python
    virtualenv_command: /usr/bin/python3 -m venv
  become: yes

- name: check for chromedriver
  changed_when: false
  stat:
    path: '/tmp/chromedriver_linux64.zip'
  register: chromedriver_result

- name: download chromedriver from remote
  when: not chromedriver_result.stat.exists
  get_url:
    url: https://chromedriver.storage.googleapis.com/2.43/chromedriver_linux64.zip
    dest: '/tmp/chromedriver_linux64.zip'
    checksum: sha1:63bce01580d6bc488aa185d572500f342f10eeef
    timeout: 180

- name: check for headless chromium
  changed_when: false
  stat:
    path: '/tmp/headless_chromium_69.zip'
  register: headless_chromium_result

- name: download headless chromium from remote
  when: not headless_chromium_result.stat.exists
  get_url:
    url: https://github.com/adieuadieu/serverless-chrome/releases/download/v1.0.0-55/stable-headless-chromium-amazonlinux-2017-03.zip
    dest: '/tmp/headless_chromium_69.zip'
    checksum: sha1:85f5dd46b7191e2f025ec73e3b20e8c418a21d67
    timeout: 300

- name: create chromedriver directory
  file:
    path: /tmp/chromedriver
    state: directory
  become: yes

- name: extract files into directory
  unarchive:
    src: '{{ item }}'
    dest: /tmp/chromedriver
    remote_src: yes
  loop:
    - /tmp/chromedriver_linux64.zip
    - /tmp/headless_chromium_69.zip
  become: yes

- name: check for allure
  changed_when: false
  stat:
    path: '/tmp/allure.zip'
  register: allure_result

- name: download allure from remote
  when: not allure_result.stat.exists
  get_url:
    url: https://github.com/allure-framework/allure2/releases/download/2.16.1/allure-2.16.1.zip
    dest: '/tmp/allure-2.16.1.zip'
    checksum: sha1:d67dae4327e0b9ebb892c5a8269e8fa604bcaa96
    timeout: 300

- name: create allure directory
  file:
    path: /tmp/allure
    state: directory
  become: yes

- name: extract files into directory
  unarchive:
    src: '{{ item }}'
    dest: /tmp/allure
    remote_src: yes
  loop:
    - /tmp/allure-2.16.1.zip
  become: yes

- name: import users' credentials
  copy:
    src: 'vars/selenium_auto_test_users.json'
    dest: '{{ hostvars["localhost"]["code"]["local_path"] }}/lambda/test_website/utils/users.json'
    force: yes
  become: yes

- name: generate test website config file
  block:
    - name: fetch template from remote
      fetch:
        src: '{{ hostvars["localhost"]["code"]["local_path"] }}/lambda/test_website/config.json.j2'
        dest: '/tmp/'
        flat: yes
        fail_on_missing : yes
      run_once: yes
    - name: upload file to remote
      template:
        src: '/tmp/config.json.j2'
        dest: '{{ hostvars["localhost"]["code"]["local_path"] }}/lambda/test_website/config.json'
        force: yes